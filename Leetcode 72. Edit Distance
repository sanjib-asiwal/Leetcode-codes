class Solution {//@CodeVed
public://@CodeVed

    int solve(string& a, string& b, int i, int j, vector<vector<int>> &dp){
        // base case
        if(i == a.length())
            return (b.length() - j);

        if(j == b.length())
            return (a.length() - i);
        
        if(dp[i][j] != -1)
            return dp[i][j];

        int ans = INT_MAX;

        if(a[i] == b[j])
            return solve(a, b, i+1, j+1, dp);

        else
        {
            // insert
            int insertAns = 1 + solve(a, b, i, j+1, dp);
            
            //delete
            int deleteAns = 1 + solve(a, b, i+1, j, dp);
            
            // update
            int replaceAns = 1 + solve(a, b, i+1, j+1, dp);

            ans = min(insertAns, min(deleteAns, replaceAns));
        }//@CodeVed
        
        return dp[i][j] = ans;
    }//@CodeVed

    int minDistance(string word1, string word2) {
        vector<vector<int>> dp(word1.length(),vector<int>(word2.length(),-1));
        return solve(word1,word2,0,0,dp);
    }//@CodeVed
};//@CodeVed
